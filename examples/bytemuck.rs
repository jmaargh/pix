mod bmp;

fn main() -> Result<(), std::io::Error> {
    let ferris_rgb: &[pix::rgb::Rgb8] = bytemuck::cast_slice(FERRIS);
    let mut ferris_raster =
        pix::Raster::with_pixels(FERRIS_SIZE.0, FERRIS_SIZE.1, ferris_rgb);
    *ferris_raster.pixel_mut(10, 6) = pix::rgb::Rgb8::new(0xff, 0x00, 0x00);
    *ferris_raster.pixel_mut(13, 6) = pix::rgb::Rgb8::new(0xff, 0x00, 0x00);
    let laser_ferris = ferris_raster;
    bmp::write(&laser_ferris, "laser_ferris.bmp")
}

const FERRIS_SIZE: (u32, u32) = (23, 12);
const FERRIS: &[u8] = &[
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff,
    0x00, 0x00, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xe5, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xa0, 0x6a, 0x42, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00,
    0xe5, 0x95, 0x00, 0xe5, 0x95, 0x00, 0xa0, 0x6a, 0x42, 0xe5, 0x95, 0x00,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42,
    0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42,
    0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42, 0xa0, 0x6a, 0x42,
    0xa0, 0x6a, 0x42, 0xff, 0xff, 0xff, 0xe5, 0x95, 0x00, 0xa0, 0x6a, 0x42,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42,
    0xe5, 0x95, 0x00, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42, 0xff, 0xff, 0xff,
    0xe5, 0x95, 0x00, 0xa0, 0x6a, 0x42, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xa0, 0x6a, 0x42, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
];
